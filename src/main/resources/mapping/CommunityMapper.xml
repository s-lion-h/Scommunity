<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.slionh.community.mapper.CommunityMapper" >
  <resultMap id="BaseResultMap" type="com.slionh.community.entity.Community" >
    <id column="idCommunity" property="idcommunity" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="president" property="president" jdbcType="INTEGER" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="teacherPhone" property="teacherphone" jdbcType="VARCHAR" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    idCommunity, name, introduction, logo, president, teacher, teacherPhone, other, createTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.slionh.community.entity.CommunityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from community
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from community
    where idCommunity = #{idcommunity,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from community
    where idCommunity = #{idcommunity,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.slionh.community.entity.CommunityExample" >
    delete from community
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.slionh.community.entity.Community" >
    <selectKey resultType="java.lang.Integer" keyProperty="idcommunity" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into community (name, introduction, logo, 
      president, teacher, teacherPhone, 
      other, createTime)
    values (#{name,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, 
      #{president,jdbcType=INTEGER}, #{teacher,jdbcType=VARCHAR}, #{teacherphone,jdbcType=VARCHAR}, 
      #{other,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.slionh.community.entity.Community" >
    <selectKey resultType="java.lang.Integer" keyProperty="idcommunity" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into community
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="president != null" >
        president,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="teacherphone != null" >
        teacherPhone,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="president != null" >
        #{president,jdbcType=INTEGER},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="teacherphone != null" >
        #{teacherphone,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slionh.community.entity.CommunityExample" resultType="java.lang.Integer" >
    select count(*) from community
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update community
    <set >
      <if test="record.idcommunity != null" >
        idCommunity = #{record.idcommunity,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.president != null" >
        president = #{record.president,jdbcType=INTEGER},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherphone != null" >
        teacherPhone = #{record.teacherphone,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update community
    set idCommunity = #{record.idcommunity,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      president = #{record.president,jdbcType=INTEGER},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      teacherPhone = #{record.teacherphone,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.slionh.community.entity.Community" >
    update community
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="president != null" >
        president = #{president,jdbcType=INTEGER},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="teacherphone != null" >
        teacherPhone = #{teacherphone,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where idCommunity = #{idcommunity,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slionh.community.entity.Community" >
    update community
    set name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      president = #{president,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=VARCHAR},
      teacherPhone = #{teacherphone,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where idCommunity = #{idcommunity,jdbcType=INTEGER}
  </update>
</mapper>